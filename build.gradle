buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.27'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

version = project.mod_version
group = 'com.adonis' // 修改这里
archivesBaseName = 'creategeography-1.20' // 修改这里

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'

    runs {
        client {
            // 必须的Java模块访问参数（无论Java 17还是21都需要）
            jvmArgs '--add-opens=java.base/java.lang.invoke=ALL-UNNAMED'
            jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED'
            jvmArgs '--add-opens=java.base/java.util=ALL-UNNAMED'
            jvmArgs '--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED'
            jvmArgs '--add-opens=java.base/java.nio.charset=ALL-UNNAMED'
            jvmArgs '--add-opens=java.base/java.net=ALL-UNNAMED'
            jvmArgs '--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED'

            // 原有参数
            jvmArgs '-Dmixin.debug.export=true'
            jvmArgs '-Dforge.disableAccessTransformer=true'

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                "creategeography" {
                    source sourceSets.main
                }
            }
        }
        // data配置也要添加同样的参数...
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
sourceSets {
    main {
        java {
            srcDir "src/platform-shared/java"
        }
        resources {
            srcDir "src/platform-shared/resources"
        }
    }
}

repositories {
    maven { url = "https://maven.createmod.net" } // Create, Ponder, Flywheel
    maven { url = "https://maven.tterrag.com" } // Registrate
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // ForgeConfigAPIPort

    maven {
        url = "https://cursemaven.com"
    }
    maven {
        name = "squiddev"
        url = "https://squiddev.cc/maven/"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        // location of the maven that hosts JEI files since January 2023
        // location of the maven for Vazkii's mods
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }

    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }

    maven {
        url = "https://jitpack.io"
        content {
            includeGroup "com.github.rtyley"
        }
    }

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.30'

    implementation(fg.deobf("com.simibubi.create:create-1.20.1:6.0.6-150:slim") { transitive = false })
    compileOnly(fg.deobf("dev.engine-room.flywheel:flywheel-forge-api-1.20.1:1.0.4"))
    runtimeOnly(fg.deobf("dev.engine-room.flywheel:flywheel-forge-1.20.1:1.0.4"))
    implementation (fg.deobf("net.createmod.ponder:Ponder-Forge-1.20.1:1.0.80"))
    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.20-1.3.3")
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    implementation("io.github.llamalad7:mixinextras-forge:0.4.1")


    implementation fg.deobf("mezz.jei:jei-1.20.1-forge:15.19.0.85")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "creategeography", // 保持现在的
                "Specification-Vendor"    : "creategeography", // 保持现在的
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "creategeography", // 保持现在的
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': 'creategeography.mixins.json' // 保持现在的
        ])
    }
}

// 确保重新混淆
jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        def mavenURL = System.getProperty("mavenDir")
        if ("${mavenURL}" != "null") {
            maven {
                url = file(mavenURL)
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

mixin {
    add sourceSets.main, "creategeography.mixins.refmap.json" // 保持现在的
    config "creategeography.mixins.json" // 保持现在的
}

configurations.configureEach {
    resolutionStrategy {
        force 'org.spongepowered:mixin:0.8.7'
    }
}